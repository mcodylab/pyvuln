trigger:
- main  # Se ejecuta en cada cambio en main

pr:
- main  # También se ejecuta en cada Pull Request a main

pool:
  vmImage: 'ubuntu-latest'  # Máquina virtual para ejecutar el pipeline

variables:
- group: varcody  # Grupo de variables con credenciales de JFrog

steps:

  - script: |
    
     pip install --no-cache-dir --index-url https://pypi.org/simple --upgrade pip  # Actualiza pip
     pip install --no-cache-dir --index-url https://pypi.org/simple  -r requirements.txt  # Instala dependencias
    displayName: 'Instalar dependencias'

  - task: SnykSecurityScan@1
    inputs:
      serviceConnectionEndpoint: 'snykcon'
      testType: 'app'  # O 'container' si es un análisis de imágenes
      monitorWhen: 'always'
      failOnIssues: false  # Cambia a 'true' si quieres que el pipeline falle en caso de vulnerabilidades críticas

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'snyk-report.json'
      artifactName: 'snyk-security-report'

