trigger:
- main  # Se ejecuta en cada cambio en main

pr:
- main  # También se ejecuta en cada Pull Request a main

pool:
  vmImage: 'ubuntu-latest'  # Máquina virtual para ejecutar el pipeline

variables:
- group: varcody  # Grupo de variables con credenciales de JFrog

steps:
- checkout: self  # Clona el repositorio de GitHub en la máquina virtual


- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
  displayName: 'Configurar Python'
  
- script: |
    python -c "import sqlite3; print('SQLite está disponible')"
  displayName: 'Verificar SQLite'

- script: |
    python -m venv venv  # Crea un entorno virtual
    source venv/bin/activate  # Activa el entorno (Linux/macOS)
    pip install --no-cache-dir --index-url https://pypi.org/simple --upgrade pip  # Actualiza pip
    pip install --no-cache-dir --index-url https://pypi.org/simple  -r requirements.txt  # Instala dependencias
  displayName: 'Instalar dependencias'

- script: |
    source venv/bin/activate  # Asegura que se usa el entorno virtual
    npm install -g snyk  # Instala Snyk CLI
    snyk auth $(SNYK_TOKEN)  # Autentica con Snyk
    snyk test --severity-threshold=high --skip-unresolved  # Escaneo de seguridad
  displayName: 'Run Snyk Security Scan'

- script: |
    echo "Enviando reporte a Snyk Dashboard..."
    snyk monitor  # Guarda el reporte en app.snyk.io para seguimiento
  displayName: 'Upload results to Snyk'
