trigger:
- main  # O el branch donde quieres ejecutarlo

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: varcody    # Contiene la variable SNYK_TOKEN

steps:
- checkout: self 
- script: |
    pip install --no-cache-dir --index-url https://pypi.org/simple --upgrade pip  # Actualiza pip
    pip install --no-cache-dir --index-url https://pypi.org/simple  -r requirements.txt  # Instala dependencias
  displayName: 'Instalar dependencias'

- script: chmod +x $(Build.SourcesDirectory) -R
  displayName: 'Dar permisos a los archivos'

# 1️⃣ Verifica el entorno del pipeline
- script: |
    echo "📂 Directorio actual:"
    pwd
    echo "📂 Archivos disponibles:"
    ls -lhR $(Build.SourcesDirectory)
  displayName: '📂 Verificar entorno antes de Snyk'

# 2️⃣ Instalar Snyk CLI si no está disponible





- script: |
    echo "📦 Descargando la última versión de Snyk CLI..."
    curl -Lo snyk https://static.snyk.io/cli/latest/snyk-linux
    chmod +x snyk
    ./snyk --version
    ./snyk --help
  displayName: '📦 Descargar y verificar Snyk CLI'



# 3️⃣ Autenticar con Snyk Web
- script: |
    echo "🔑 Autenticando Snyk..."
    ./snyk auth $(SNYK_TOKEN)
  displayName: '🔑 Autenticación en Snyk'

# 4️⃣ Ejecutar análisis de seguridad en código fuente



- script: |
    echo "🔍 Ejecutando Snyk Test..."
    DEBUG=*snyk* ./snyk       code test --command=python3 --file=requirements.txt --package-manager=pip  --debug  --org=4c1ee31d-3158-4a30-ae75-b754fa29b29f  || echo "⚠️ Error en Snyk Test"
  displayName: '🔍 Ejecutar Snyk Test'



# 7️⃣ Enviar resultados a Snyk Web
- script: |
    echo "📡 Enviando datos a Snyk Web..."
     DEBUG=*snyk*  ./snyk monitor    --command=python3 --file=requirements.txt --package-manager=pip  --debug  --org=4c1ee31d-3158-4a30-ae75-b754fa29b29f || echo "⚠️ Error al enviar datos a Snyk Web"
  displayName: '📡 Enviar datos a Snyk Web'
 

# 8️⃣ Publicar reportes de Snyk en Azure DevOps
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-code-report.json'
    artifactName: 'snyk-code-report'
  displayName: '📄 Publicar Reporte Snyk Code'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-deps-report.json'
    artifactName: 'snyk-deps-report'
  displayName: '📄 Publicar Reporte Snyk Dependencies'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-docker-report.json'
    artifactName: 'snyk-docker-report'
  displayName: '📄 Publicar Reporte Snyk Docker'
  condition: succeededOrFailed() # Evita fallar si no hay Docker
