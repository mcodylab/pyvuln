trigger:
- main  # O el branch donde quieres ejecutarlo

pool:
   name: 'Agent'

variables:
  - group: varcody    # Contiene la variable SNYK_TOKEN

steps:
- checkout: self 


- script: chmod +x $(Build.SourcesDirectory) -R
  displayName: 'Dar permisos a los archivos'

# 1️⃣ Verifica el entorno del pipeline
- script: |
    echo "📂 Directorio actual:"
    pwd
    echo "📂 Archivos disponibles:"
    ls -lhR $(Build.SourcesDirectory)
  displayName: '📂 Verificar entorno antes de Snyk'


# 1️⃣ Verifica el entorno del pipeline
- script: |
    echo "📂 Pip freeze:"
     pip freeze > requirements.txt
    echo "📂 Validacion:"
    pip check
  displayName: '📂 Validaciones requirements - validaciones '


# 2️⃣ Instalar Snyk CLI si no está disponible






# 3️⃣ Autenticar con Snyk Web
- script: |
    echo "🔑 Autenticando Snyk..."
    snyk auth $(SNYK_TOKEN)
  displayName: '🔑 Autenticación en Snyk'

# 4️⃣ Ejecutar análisis de seguridad en código fuente
- script: |
    echo "🔍 Ejecutando Snyk Test..."
    snyk auth $(SNYK_TOKEN)
    snyk test --project-name="$(Build.Repository.Name)" --json-file-output=$(Build.SourcesDirectory)/snyk-code-report.json || echo "⚠️ Error en Snyk Test"
    snyk monitor --project-name="$(Build.Repository.Name)" || echo "⚠️ Error al enviar datos a Snyk Web"
  displayName: '🔍 Ejecutar Snyk Test'

# 7️⃣ Enviar resultados a Snyk Web
- script: |
    echo "📡 Enviando datos a Snyk Web..."
    snyk monitor --project-name="$(Build.Repository.Name)" || echo "⚠️ Error al enviar datos a Snyk Web"
  displayName: '📡 Enviar datos a Snyk Web'

# 8️⃣ Verificar que el reporte se generó correctamente
- script: |
    echo "📂 Verificando contenido del reporte..."
    cat $(Build.SourcesDirectory)/snyk-code-report.json || echo "⚠️ Reporte vacío o no encontrado"
  displayName: "Verificar contenido del reporte"

# 9️⃣ Publicar reportes de Snyk en Azure DevOps
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-code-report.json'
    artifactName: 'snyk-code-report'
  displayName: '📄 Publicar Reporte Snyk Code'

# 🔄 Mover archivo a la carpeta de artefactos
- script: |
    echo "📦 Moviendo archivo a ArtifactStagingDirectory..."
    mv $(Build.SourcesDirectory)/snyk-code-report.json $(Build.ArtifactStagingDirectory)/
  displayName: "Mover archivo a ArtifactStagingDirectory"

# 📄 Convertir JSON a HTML
- script: |
    echo "🔄 Convirtiendo JSON a HTML..."
    cat $(Build.ArtifactStagingDirectory)/snyk-code-report.json | jq -r '
    "<html><head><title>Snyk Report</title></head><body><h1>Resultados de Análisis</h1><pre>" + 
    (tostring) + 
    "</pre></body></html>"' > $(Build.ArtifactStagingDirectory)/snyk-report.html
  displayName: "Convertir JSON a HTML"


# 📂 Verificar archivos en ArtifactStagingDirectory
- script: |
    echo "📂 Contenido de ArtifactStagingDirectory:"
    ls -l $(Build.ArtifactStagingDirectory)
  displayName: "Verificar archivos en ArtifactStagingDirectory"

# 📤 Publicar Reporte HTML
- task: PublishBuildArtifacts@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/snyk-report.html'
    artifactName: 'snyk-html-report'
  displayName: '📤 Publicar Reporte HTML de Snyk'
