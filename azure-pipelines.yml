trigger:
- main  # O el branch donde quieres ejecutarlo

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: varcody    # Contiene la variable SNYK_TOKEN

steps:

# 1️⃣ Verifica el entorno del pipeline
- script: |
    echo "📂 Directorio actual:"
    pwd
    echo "📂 Archivos disponibles:"
    ls -lhR $(Build.SourcesDirectory)
  displayName: '📂 Verificar entorno antes de Snyk'

# 2️⃣ Instalar Snyk CLI si no está disponible
- script: |
    echo "🔍 Verificando instalación de Snyk..."
    if ! command -v snyk &> /dev/null; then
        echo "📦 Snyk no encontrado, instalando..."
        npm install -g snyk
    fi
    snyk --version
  displayName: '📦 Instalar Snyk CLI'

# 3️⃣ Autenticar con Snyk Web
- script: |
    echo "🔑 Autenticando Snyk..."
    snyk auth $(SNYK_TOKEN)
  displayName: '🔑 Autenticación en Snyk'

# 4️⃣ Ejecutar análisis de seguridad en código fuente
- script: |
    echo "🔍 Ejecutando Snyk Code Test..."
    snyk code test --json > snyk-code-report.json || echo "⚠️ Snyk Code Test finalizó con errores"
  displayName: '🔍 Ejecutar Snyk Code Test'

# 5️⃣ Ejecutar análisis de seguridad en dependencias (Python, Node.js, etc.)
- script: |
    echo "📦 Ejecutando análisis de dependencias..."
    snyk test --json > snyk-deps-report.json || echo "⚠️ Snyk Test finalizó con errores"
  displayName: '📦 Ejecutar Snyk Dependency Test'

# 6️⃣ Ejecutar análisis de seguridad en Dockerfile (si aplica)
- script: |
    echo "🐳 Escaneando imagen Docker..."
    snyk container test <tu-imagen>:latest --json > snyk-docker-report.json || echo "⚠️ Snyk Docker Test finalizó con errores"
  displayName: '🐳 Ejecutar Snyk Docker Test'
  condition: succeededOrFailed() # Evita fallar si no hay Docker

# 7️⃣ Enviar resultados a Snyk Web
- script: |
    echo "📡 Enviando datos a Snyk Web..."
    snyk monitor || echo "⚠️ Error al enviar datos a Snyk Web"
  displayName: '📡 Enviar datos a Snyk Web'

# 8️⃣ Publicar reportes de Snyk en Azure DevOps
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-code-report.json'
    artifactName: 'snyk-code-report'
  displayName: '📄 Publicar Reporte Snyk Code'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-deps-report.json'
    artifactName: 'snyk-deps-report'
  displayName: '📄 Publicar Reporte Snyk Dependencies'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-docker-report.json'
    artifactName: 'snyk-docker-report'
  displayName: '📄 Publicar Reporte Snyk Docker'
  condition: succeededOrFailed() # Evita fallar si no hay Docker
