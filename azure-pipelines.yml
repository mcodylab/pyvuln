trigger:
- main  # O el branch donde quieres ejecutarlo

pool:
   name: 'Agent'

variables:
  - group: varcody    # Contiene la variable SNYK_TOKEN

steps:
- checkout: self 


- script: chmod +x $(Build.SourcesDirectory) -R
  displayName: 'Dar permisos a los archivos'

# 1️⃣ Verifica el entorno del pipeline
- script: |
    echo "📂 Directorio actual:"
    pwd
    echo "📂 Archivos disponibles:"
    ls -lhR $(Build.SourcesDirectory)
  displayName: '📂 Verificar entorno antes de Snyk'


# 1️⃣ Verifica el entorno del pipeline
- script: |
    echo "📂 Pip freeze:"
     pip freeze > requirements.txt
    echo "📂 Validacion:"
    pip check
  displayName: '📂 Validaciones requirements - validaciones '


# 2️⃣ Instalar Snyk CLI si no está disponible






# 3️⃣ Autenticar con Snyk Web
- script: |
    echo "🔑 Autenticando Snyk..."
    snyk auth $(SNYK_TOKEN)
  displayName: '🔑 Autenticación en Snyk'


# 4️⃣ Ejecutar análisis de seguridad en código fuente
- script: |
    echo "🔍 Ejecutando Snyk Test..."
    snyk auth $(SNYK_TOKEN)
    snyk   test    --project-name="$(Build.Repository.Name)" --json-file-output=$(Build.SourcesDirectory)/snyk-code-report.json  || echo "⚠️ Error en Snyk Test"
    snyk monitor --project-name="$(Build.Repository.Name)"   || echo "⚠️ Error al enviar datos a Snyk Web"
  displayName: '🔍 Ejecutar Snyk Test'

# 🔹 Verificar que el archivo JSON tiene datos
- script: |
    if [ ! -s "$(Build.SourcesDirectory)/snyk-code-report.json" ]; then
      echo "⚠️ El archivo JSON de Snyk está vacío o no se generó correctamente."
      exit 1
    fi
    echo "✅ Reporte de Snyk generado correctamente:"
    cat $(Build.SourcesDirectory)/snyk-code-report.json
  displayName: '📄 Verificar contenido del reporte Snyk'

# 7️⃣ Enviar resultados a Snyk Web
- script: |
    echo "📡 Enviando datos a Snyk Web..."
    snyk monitor --project-name="$(Build.Repository.Name)"   || echo "⚠️ Error al enviar datos a Snyk Web"
  displayName: '📡 Enviar datos a Snyk Web'

# 🔹 Publicar reportes de Snyk en Azure DevOps
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/snyk-code-report.json'
    artifactName: 'snyk-code-report'
  displayName: '📄 Publicar Reporte Snyk Code'

# 🔹 Convertir JSON a HTML (Opcional)
- script: |
    cat $(Build.SourcesDirectory)/snyk-code-report.json | jq '.' > $(Build.SourcesDirectory)/snyk-code-report.html
  displayName: "📄 Convertir JSON a HTML"

# 🔹 Verificar archivos generados
- script: |
    echo "📂 Archivos generados en el directorio:"
    ls -lh $(Build.SourcesDirectory)
  displayName: "📂 Verificar archivos generados"

# 🔹 Mover el archivo JSON a ArtifactStagingDirectory
- script: |
    mv $(Build.SourcesDirectory)/snyk-code-report.json $(Build.ArtifactStagingDirectory)/
  displayName: "📂 Mover archivo JSON a ArtifactStagingDirectory"

# 🔹 Publicar artefactos en Azure DevOps
- task: PublishBuildArtifacts@1
  inputs:
    path: '$(Build.ArtifactStagingDirectory)/snyk-code-report.json'
    artifactName: 'snyk-report'
  displayName: '📄 Publicar Reporte Snyk en Artefactos'